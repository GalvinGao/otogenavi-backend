package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"

	"entgo.io/contrib/entgql"
	"github.com/GalvinGao/otogenavi-backend/internal/ent"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (ent.Noder, error) {
	return r.Query().Node(ctx, id)
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []string) ([]ent.Noder, error) {
	return r.Query().Nodes(ctx, ids)
}

// Locations is the resolver for the locations field.
func (r *queryResolver) Locations(ctx context.Context, after *entgql.Cursor[string], first *int, before *entgql.Cursor[string], last *int, where *ent.LocationWhereInput) (*ent.LocationConnection, error) {
	return r.Ent.Location.Query().
		Paginate(ctx, after, first, before, last,
			ent.WithLocationFilter(where.Filter),
		)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// LocationWhereInput returns LocationWhereInputResolver implementation.
func (r *Resolver) LocationWhereInput() LocationWhereInputResolver {
	return &locationWhereInputResolver{r}
}

type queryResolver struct{ *Resolver }
type locationWhereInputResolver struct{ *Resolver }
